apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  labels:
    app: backend-app
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: backend-app
    tier: mysql
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  labels:
    app: backend-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  labels:
    app: backend-app
spec:
  selector:
    matchLabels:
      app: backend-app
      tier: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: backend-app
        tier: mysql
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysecrets
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysecrets
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysecrets
              key: MYSQL_PASSWORD
        - name: MYSQL_SERVICE_HOST
          valueFrom:
            secretKeyRef:
              name: mysecrets
              key: MYSQL_SERVICE_HOST
                 
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: "/var/lib/mysql"
          subpath: "mysql"
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
      - name: mysql-initdb
        configMap:
          name: mysql-initdb-config
        
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  initdb.sql: |
    CREATE DATABASE IF NOT EXISTS db_ms_identity_managment;
